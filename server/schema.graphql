# type Point {
#   x: Int!
#   y: Int!
# }

# type Polygon {
#   points: [Point!]!
# }

# type Country {
#   id: String!
#   name: String!
#   polygon: Polygon!
#   capitolDotPoints: [Point!]!
# }

# input CountryInput {
#   id: String!
#   name: String!
#   polygon: Polygon!
#   capitolDotPoints: [Point!]!
# }

# type NeighboringCountries {
#   country1Id: String!
#   country2Id: String!
# }

# type WaterCountry {
#   countryId: String!
#   waterId: String!
# }

input MapInput {
  name: String!
  # rawMap: String!
  mapJson: String!
  # countries: [Country!]!
  # width: Int! # Used for drawing the water since we don't store the water polygons
  # height: Int! # used for drawing the water since we don't store the water polygons
  # neighboringCountries: [NeighboringCountries!]!
  # countriesAdjacentToWater: [WaterCountry]! # Maybe there is no water
}

type Map {
  id: String!
  name: String!
  mapJson: String!
  # rawMap: String!
  # countries: [Country!]!
  # width: Int! # Used for drawing the water since we don't store the water polygons
  # height: Int! # used for drawing the water since we don't store the water polygons
  # neighboringCountries: [NeighboringCountries!]!
  # countriesAdjacentToWater: [WaterCountry]! # Maybe there is no water
}

type Mutation {
  # startGame(gameConfiguration: GameConfiguration): Game

  createMap(map: MapInput!): Map!
}

# type Player {
#   id: String
#   name: String
#   color: String
#   capitolId: String
# }

# enum TurnStatus {
#   PLACING_CAPITOL
#   PLACING_REINFORCEMENTS
#   ACTION
#   MOVING_TROOPS
#   GAME_OVER
# }

# type CountriesAdjacentToWater {
#   countryIds = [String]! # There might not be water
# }

# type Game {
#   id: String
#   mapName: String
#   countries: [GameCountry!]!
#   players: [Player!]!
#   playerTurnOrder: [String!]!
#   neighboringCountries: [NeighboringCountries!]! # Stored here so we don't have duplicate information in the country type. Both countries would be storing the fact that they are adjacent.
#   bodiesOfWater : [BodyOfWater]!
#   playerTurn: String
#   turnStatus: TurnStatus
# }

# type GameCountry {
#   polygon: Polygon!
#   owner_id: String # null if neutral
#   troop_count: Int!
#   adjacentWater: [String]!
# }

# type GameConfiguration {
#   mapId: String
#   numberOfPlayers: Int
# }

type Query {
  map(id: String): Map
  maps: [Map!]!
}
